#ifndef __SCRIPT_OPCODES_H
#define __SCRIPT_OPCODES_H

enum script_opcode {
    SCRIPT_OPCODE_0 = 0x00,
    SCRIPT_OPCODE_FALSE = SCRIPT_OPCODE_0,

    SCRIPT_OPCODE_PUSHDATA1 = 0x4C,
    SCRIPT_OPCODE_PUSHDATA2 = 0x4D,
    SCRIPT_OPCODE_PUSHDATA4 = 0x4E,

    SCRIPT_OPCODE_1NEGATE = 0x4F,
    SCRIPT_OPCODE_RESERVED = 0x50,

    SCRIPT_OPCODE_1 = 0x51,
    SCRIPT_OPCODE_TRUE = 0x51,

    SCRIPT_OPCODE_2 = 0x52,
    SCRIPT_OPCODE_3 = 0x53,
    SCRIPT_OPCODE_4 = 0x54,
    SCRIPT_OPCODE_5 = 0x55,
    SCRIPT_OPCODE_6 = 0x56,
    SCRIPT_OPCODE_7 = 0x57,
    SCRIPT_OPCODE_8 = 0x58,
    SCRIPT_OPCODE_9 = 0x59,
    SCRIPT_OPCODE_10 = 0x5A,
    SCRIPT_OPCODE_11 = 0x5B,
    SCRIPT_OPCODE_12 = 0x5C,
    SCRIPT_OPCODE_13 = 0x5D,
    SCRIPT_OPCODE_14 = 0x5E,
    SCRIPT_OPCODE_15 = 0x5F,
    SCRIPT_OPCODE_16 = 0x60,

    SCRIPT_OPCODE_NOP = 0x61,
    SCRIPT_OPCODE_VER = 0x62,
    SCRIPT_OPCODE_IF = 0x63,
    SCRIPT_OPCODE_NOTIF = 0x64,
    SCRIPT_OPCODE_VERIF = 0x65,
    SCRIPT_OPCODE_VERNOTIF = 0x66,
    SCRIPT_OPCODE_ELSE = 0x67,
    SCRIPT_OPCODE_ENDIF = 0x68,
    SCRIPT_OPCODE_VERIFY = 0x69,
    SCRIPT_OPCODE_RETURN = 0x6A,

    SCRIPT_OPCODE_TOALTSTACK = 0x6B,
    SCRIPT_OPCODE_FROMALTSTACK = 0x6C,
    SCRIPT_OPCODE_2DROP = 0x6D,
    SCRIPT_OPCODE_2DUP = 0x6E,
    SCRIPT_OPCODE_3DUP = 0x6F,
    SCRIPT_OPCODE_2OVER = 0x70,
    SCRIPT_OPCODE_2ROT = 0x71,
    SCRIPT_OPCODE_2SWAP = 0x72,
    SCRIPT_OPCODE_IFDUP = 0x73,
    SCRIPT_OPCODE_DEPTH = 0x74,
    SCRIPT_OPCODE_DROP = 0x75,
    SCRIPT_OPCODE_DUP = 0x76,
    SCRIPT_OPCODE_NIP = 0x77,
    SCRIPT_OPCODE_OVER = 0x78,
    SCRIPT_OPCODE_PICK = 0x79,
    SCRIPT_OPCODE_ROLL = 0x7A,
    SCRIPT_OPCODE_ROT = 0x7B,
    SCRIPT_OPCODE_SWAP = 0x7C,
    SCRIPT_OPCODE_TUCK = 0x7D,

    // splice ops
    SCRIPT_OPCODE_CAT = 0x7E,
    SCRIPT_OPCODE_SUBSTR = 0x7F,
    SCRIPT_OPCODE_LEFT = 0x80,
    SCRIPT_OPCODE_RIGHT = 0x81,
    SCRIPT_OPCODE_SIZE = 0x82,

    SCRIPT_OPCODE_INVERT = 0x83,
    SCRIPT_OPCODE_AND = 0x84,
    SCRIPT_OPCODE_OR = 0x85,
    SCRIPT_OPCODE_XOR = 0x86,
    SCRIPT_OPCODE_EQUAL = 0x87,
    SCRIPT_OPCODE_EQUALVERIFY = 0x88,
    SCRIPT_OPCODE_RESERVED1 = 0x89,
    SCRIPT_OPCODE_RESERVED2 = 0x8A,

    SCRIPT_OPCODE_1ADD = 0x8B,
    SCRIPT_OPCODE_1SUB = 0x8C,
    SCRIPT_OPCODE_2MUL = 0x8D,
    SCRIPT_OPCODE_2DIV = 0x8E,
    SCRIPT_OPCODE_NEGATE = 0x8F,
    SCRIPT_OPCODE_ABS = 0x90,
    SCRIPT_OPCODE_NOT = 0x91,
    SCRIPT_OPCODE_0NOTEQUAL = 0x92,

    SCRIPT_OPCODE_ADD = 0x93,
    SCRIPT_OPCODE_SUB = 0x94,
    SCRIPT_OPCODE_MUL = 0x95,
    SCRIPT_OPCODE_DIV = 0x96,
    SCRIPT_OPCODE_MOD = 0x97,
    SCRIPT_OPCODE_LSHIFT = 0x98,
    SCRIPT_OPCODE_RSHIFT = 0x99,

    SCRIPT_OPCODE_BOOLAND = 0x9A,
    SCRIPT_OPCODE_BOOLOR = 0x9B,
    SCRIPT_OPCODE_NUMEQUAL = 0x9C,
    SCRIPT_OPCODE_NUMEQUALVERIFY = 0x9D,
    SCRIPT_OPCODE_NUMNOTEQUAL = 0x9E,
    SCRIPT_OPCODE_LESSTHAN = 0x9F,
    SCRIPT_OPCODE_GREATERTHAN = 0xA0,
    SCRIPT_OPCODE_LESSTHANOREQUAL = 0xA1,
    SCRIPT_OPCODE_GREATERTHANOREQUAL = 0xA2,
    SCRIPT_OPCODE_MIN = 0xA3,
    SCRIPT_OPCODE_MAX = 0xA4,
    SCRIPT_OPCODE_WITHIN = 0xA5,

    SCRIPT_OPCODE_RIPEMD160 = 0xA6,
    SCRIPT_OPCODE_SHA1 = 0xA7,
    SCRIPT_OPCODE_SHA256 = 0xA8,
    SCRIPT_OPCODE_HASH160 = 0xA9,
    SCRIPT_OPCODE_HASH256 = 0xAA,
    SCRIPT_OPCODE_CODESEPARATOR = 0xAB,
    SCRIPT_OPCODE_CHECKSIG = 0xAC,
    SCRIPT_OPCODE_CHECKSIGVERIFY = 0xAD,
    SCRIPT_OPCODE_CHECKMULTISIG = 0xAE,
    SCRIPT_OPCODE_CHECKMULTISIGVERIFY = 0xAF,

    SCRIPT_OPCODE_NOP1 = 0xB0,
    SCRIPT_OPCODE_NOP2 = 0xB1,
    SCRIPT_OPCODE_NOP3 = 0xB2,
    SCRIPT_OPCODE_NOP4 = 0xB3,
    SCRIPT_OPCODE_NOP5 = 0xB4,
    SCRIPT_OPCODE_NOP6 = 0xB5,
    SCRIPT_OPCODE_NOP7 = 0xB6,
    SCRIPT_OPCODE_NOP8 = 0xB7,
    SCRIPT_OPCODE_NOP9 = 0xB8,
    SCRIPT_OPCODE_NOP10 = 0xB9,


    SCRIPT_OPCODE_INVALID = 0xFF
};

#define SCRIPT_OPCODE_DECODE_N(opcode) (((opcode) == SCRIPT_OPCODE_0) ? 0 : ((int)(opcode) - ((int)SCRIPT_OPCODE_1 - 1)))

#endif /* __SCRIPT_OPCODES_H */
